function [TPR,validIndices] = anomalyDataInterpretation(dist_threshold,time_threshold)
% Athanasios Tsiligkaridis, July 2nd 2016
%{
    INPUTS:  1) Distance threshold (in meters) 
             2) Time thresholds (in seconds)
    
    OUTPUTS: 1) True Positive Rate (percentage of indices whose minimum distances and time difference elements are below the inputted thresholds)
             2) Valid Indices (Indices whose minimum distances and time difference elements are below the inputted thresholds)

    DESCRIPTION: 
  
    Using a set of indices (defined in the program as a vector), we loop through all indices and focus on a specific one. 
    With this, we use the 'sample_path_jam_test_data_sorted.json' file to extract each index's uuid and timestamp info.
    With the timestamp, we look at the accident list (defined in the program) and we locate the accident(s) with the closest matching time values.  With this, we extract accident coordinates.
    With the uuid, we find its respective jam points from the 'points_dict_Mar_16_2016.mat' file. 
    With the jam points and the accident points, we create a distance matrix whos elements represent the distances in km between two coordinates.  
    For each index, we extract the minimum distance which represents the distance between the accident location and the closeste point in the jam.
    Also, we create a time difference element which is the difference between the accident timestamp and the index's time stamp.
    
    Finally, we take all of the preceding steps, replicate them for each
    index, and create a matrix of information where the first col is the
    index, the second is the min distance, and the last is the time
    difference.  

    With this, we then look for indices whose min distances and time
    differences are within user defined thresholds.  
    
    If for some index its elements are withing the respective thresholds, then that index was correctly identified. 
    The larger the thresholds the larger the TPR percentage output. 

    EXAMPLE:  

    [TPR,validIndices] = anomalyDataInterpretation2(500,20*60)

finalmatrix =

                      7482          1235.20150828146          0.70350000000326
                      6721          2062.94131536816          600.022100000002
                      6528          531.267054592205        0.0826999999990221
                      1942           5209.7591898959                -1199.8386
                      1941           6199.9952218053                -1199.8387
                      1795          6019.67144501159                -2399.1959
                      1708          3724.98690980767                -2399.7136
                      6654          3679.34276411531         0.672000000005937
                      6753          531.267054592205          600.220199999996
                      6596          3895.13239720009         0.352100000003702
                      6385          1061.60064651841         0.190400000006775
                      6382          3816.23063886936         0.190000000002328
                      6503          2709.82925103915         0.696599999995669
                      6502          2222.60204316792         0.696500000005472
                      6506          2486.45967511757         0.696899999995367
                      6436          324.990777893951         0.499800000005052
                      6808          361.945337818237          600.415800000002
                      6806          2183.39506877493                   600.409
                      6804          2928.64248179457          600.408800000005
                      6613          2235.43117519638         0.371100000003935
                      1995          2071.24527953727                -1199.4819
                      1994          6203.02843998273                -1199.5123
                      6755          637.752566235104          600.220400000006
                      1692          3506.13898212679                -2399.7703
                      1755           2931.9925839944                -2399.3167
                      1699          3479.64412241718                -2399.7453
                      6415           2243.2520061012         0.266300000002957
                      3412          536.454928026772                -2999.4398
                      3413          161.992498026725                -2999.4397
                      3419          96.0938122284214                 -2999.414
                      6470          1676.29546061031         0.607499999998254
                      6797          1663.00377327557          600.380600000004
                      6850          274.720606344021          600.754400000005
                      6853          2880.60740221664          600.754700000005
                      6790          1061.60064651841                  600.3799
                      1717          2692.42904856012                -2399.6839
                      6581          2750.24852886294         0.314599999997881
                      3398          2148.16643721038                -2999.7101
                      6536          1298.31128328115         0.111099999994622
                      6363          3359.02702263626         0.137700000006589
                      6361          3196.71900876172         0.108300000007148
                      6693          2797.60087675911         0.800799999997253
                      3444          882.559076402301                -2999.2579
                      6409          1676.29546061031         0.265700000003562
                      3441          1983.94649050205                -2999.2585
                      1964          3547.24605299764                -1199.7836
                      6697          2973.28183742551           0.8012000000017
                      6864          3113.33875222124          600.782800000001
                      6865          2071.43842454728          600.782900000006
                      1686           5209.7591898959                -2399.8067
                      7457          2481.71280648013         0.641799999997602
                      7476          2418.47106130532          0.66830000000482
                      7396          1075.43270055776         0.240099999995437
                      6568          3056.20848433405         0.300399999992806
                      6562          1510.86861521426         0.282999999995809
                      1929          5126.59992484812                 -1199.867
                      7368          361.945337818237        0.0650000000023283
                      7366          3845.20718658201        0.0647999999928288
                      7438          1708.92567345352         0.607699999993201
                      6820          3679.34276411531          600.444799999997
                      6829           4629.8787683873          600.471000000005
                      6674          2071.43842454728         0.744699999995646
                      1729          2309.92627482392                -2399.6501
                      1722          1423.98370494746                -2399.6834
                      6676          3113.33875222124         0.744900000005146
                      6548          1676.29546061031          0.22620000000461
                      6684          2235.43117519638         0.773300000000745
                      6524          637.752566235104         0.082299999994575
                      6526          1024.09894863074        0.0825000000040745
                      6481          450.035743885225         0.636899999997695
                      6350            2337.060982519        0.0525000000052387
                      7445          1732.43306143763         0.608699999997043
                      6557          1061.60064651841         0.282500000001164
                      2032          2692.42904856012                -1199.3258
                      6639          1327.33427294814         0.651700000002165
                      6718          2797.60087675911          600.021800000002
                      7388          703.616648247125         0.212100000004284
                      6644          2880.60740221664          0.65219999999681
                      6392          637.752566235104         0.208400000003167
                      6396          1024.09894863074         0.208799999993062
                      6708          3762.26151075763          600.001699999993
                      6692          2062.94131536816         0.800700000007055
                      6457          3655.92783788092         0.576700000005076
                      6514          531.267054592205         0.784700000003795
                      6426          5547.77761243275         0.443599999998696
                      6422          2882.86311138708         0.380699999994249
                      6423          2062.94131536816         0.380799999998999
                      6731           2578.4891021795          600.027700000006
                      6603          324.990777893951         0.352799999993294
                      6608          1793.20783946804         0.370599999994738
                      1981          2309.92627482392                -1199.6542
                      1730          6203.02843998273                  -2399.65
                      3375           319.63816176742                -2999.8979
                      6460          1995.29924340883          0.58980000000156
                      6494          3113.33875222124         0.692500000004657
                      6493          2880.60740221664         0.692399999999907
                      6492          2071.43842454728         0.692299999995157
                      1762          3236.12543060099                 -2399.316
                      2006           2393.7773220107                -1199.4564


TPR =

          6.06060606060606


validIndices =

        6436        6808        6850        7368        6481        6603
%}

%clear, clc

% Initialization
num_closeneighbors = 10;

%% 1) Import test data from "sample_path_jam_test_data_sorted.json"
dat = loadjson(['sample_path_jam_test_data_sorted.json']);
testData = struct2cell(dat);
names = fieldnames(dat);
testIndices = zeros(1,length(names));
for i = 1:length(names)
    q = names{i};
    ind=strfind(q,'_');
    qq = q([(ind-1) (ind+1):end]);
    testIndices(i)= str2num(qq);
end

%% 2) Form refined indices vector. 
refinedIndices = [7482;
  6721;
  6528;
  1942;
  1941;
  1795;
  1708;
  6654;
  6753;
  6596;
  6385;
  6382;
  6503;
  6502;
  6506;
  6436;
  6808;
  6806;
  6804;
  6613;
  1995;
  1994;
  6755;
  1692;
  1755;
  1699;
  6415;
  3412;
  3413;
  3419;
  6470;
  6797;
  6850;
  6853;
  6790;
  1717;
  6581;
  3398;
  6536;
  6363;
  6361;
  6693;
  3444;
  6409;
  3441;
  1964;
  6697;
  6864;
  6865;
  1686;
  7457;
  7476;
  7396;
  6568;
  6562;
  1929;
  7368;
  7366;
  7438;
  6820;
  6829;
  6674;
  1729;
  1722;
  6676;
  6548;
  6684;
  6524;
  6526;
  6481;
  6350;
  7445;
  6557;
  2032;
  6639;
  6718;
  7388;
  6644;
  6392;
  6396;
  6708;
  6692;
  6457;
  6514;
  6426;
  6422;
  6423;
  6731;
  6603;
  6608;
  1981;
  1730;
  3375;
  6460;
  6494;
  6493;
  6492;
  1762;
  2006];

%% 3) Import uuid point data from .json file -> 
a=load('points_dict_Mar_16_2016.mat');
uuidPoints = struct2cell(a);

%% 4) Form data structure with information from each accident
accidentInfo = {{'-71.070473', '42.363689', 'ACCIDENT', 10500.0, '2016-03-16 02:56:00.000'};
{'-71.119478', '42.361722', 'ACCIDENT', 8700.0, '2016-03-16 02:26:00.000'};
{'-71.119478', '42.361722', 'ACCIDENT', 7500.0, '2016-03-16 02:06:00.000'};
{'-71.119478', '42.361722', 'ACCIDENT', 8100.0, '2016-03-16 02:16:00.000'};
{'-71.074659', '42.349568', 'ACCIDENT', 9300.0, '2016-03-16 02:36:00.000'};
{'-71.074659', '42.349568', 'ACCIDENT', 9900.0, '2016-03-16 02:46:00.000'};
{'-71.07054', '42.363505', 'ACCIDENT', 10500.0, '2016-03-16 02:56:00.000'};
{'-71.074659', '42.349568', 'ACCIDENT', 10500.0, '2016-03-16 02:56:00.000'};
{'-71.07054', '42.363505', 'ACCIDENT', 11100.0, '2016-03-16 03:06:00.000'};
{'-71.073347', '42.331835', 'ACCIDENT', 11100.0, '2016-03-16 03:06:00.000'};
{'-71.070473', '42.363689', 'ACCIDENT', 11100.0, '2016-03-16 03:06:00.000'};
{'-71.07054', '42.363505', 'ACCIDENT', 11700.0, '2016-03-16 03:16:00.000'};
{'-71.073347', '42.331835', 'ACCIDENT', 11700.0, '2016-03-16 03:16:00.000'};
{'-71.070473', '42.363689', 'ACCIDENT', 11700.0, '2016-03-16 03:16:00.000'};
{'-71.073347', '42.331835', 'ACCIDENT', 12300.0, '2016-03-16 03:26:00.000'};
{'-71.070473', '42.363689', 'ACCIDENT', 12300.0, '2016-03-16 03:26:00.000'};
{'-71.069837', '42.364777', 'ACCIDENT', 39900.0, '2016-03-16 11:06:00.000'};
{'-71.069837', '42.364777', 'ACCIDENT', 38700.0, '2016-03-16 10:46:00.000'};
{'-71.069837', '42.364777', 'ACCIDENT', 39300.0, '2016-03-16 10:56:00.000'};
{'-71.069837', '42.364777', 'ACCIDENT', 40500.0, '2016-03-16 11:16:00.000'};
{'-71.086604', '42.372806', 'ACCIDENT', 48300.0, '2016-03-16 13:26:00.000'};
{'-71.086604', '42.372806', 'ACCIDENT', 47100.0, '2016-03-16 13:06:00.000'};
{'-71.073156', '42.375444', 'ACCIDENT', 47700.0, '2016-03-16 13:16:00.000'};
{'-71.086604', '42.372806', 'ACCIDENT', 47700.0, '2016-03-16 13:16:00.000'};
{'-71.073156', '42.375444', 'ACCIDENT', 48300.0, '2016-03-16 13:26:00.000'};
{'-71.073156', '42.375444', 'ACCIDENT', 48900.0, '2016-03-16 13:36:00.000'};
{'-71.084909', '42.352907', 'ACCIDENT', 60300.0, '2016-03-16 16:46:00.000'};
{'-71.084909', '42.352907', 'ACCIDENT', 60900.0, '2016-03-16 16:56:00.000'};
{'-71.082628', '42.353414', 'ACCIDENT', 60900.0, '2016-03-16 16:56:00.000'};
{'-71.089986', '42.351995', 'ACCIDENT', 63900.0, '2016-03-16 17:46:00.000'};
{'-71.066139', '42.371245', 'ACCIDENT', 64500.0, '2016-03-16 17:56:00.000'};
{'-71.120151', '42.35992', 'ACCIDENT', 65100.0, '2016-03-16 18:06:00.000'};
{'-71.1189', '42.360517', 'ACCIDENT', 65100.0, '2016-03-16 18:06:00.000'};
{'-71.071264', '42.353038', 'ACCIDENT', 66300.0, '2016-03-16 18:26:00.000'};
{'-71.073345', '42.356349', 'ACCIDENT', 68700.0, '2016-03-16 19:06:00.000'};
{'-71.128121', '42.359786', 'ACCIDENT', 69300.0, '2016-03-16 19:16:00.000'};
{'-71.083487', '42.353292', 'ACCIDENT', 61500.0, '2016-03-16 17:06:00.000'};
{'-71.082628', '42.353414', 'ACCIDENT', 61500.0, '2016-03-16 17:06:00.000'};
{'-71.083487', '42.353292', 'ACCIDENT', 62100.0, '2016-03-16 17:16:00.000'};
{'-71.082628', '42.353414', 'ACCIDENT', 62100.0, '2016-03-16 17:16:00.000'};
{'-71.103575', '42.348282', 'ACCIDENT', 62100.0, '2016-03-16 17:16:00.000'};
{'-71.120151', '42.35992', 'ACCIDENT', 62700.0, '2016-03-16 17:26:00.000'};
{'-71.083487', '42.353292', 'ACCIDENT', 62700.0, '2016-03-16 17:26:00.000'};
{'-71.082628', '42.353414', 'ACCIDENT', 62700.0, '2016-03-16 17:26:00.000'};
{'-71.103575', '42.348282', 'ACCIDENT', 62700.0, '2016-03-16 17:26:00.000'};
{'-71.120151', '42.35992', 'ACCIDENT', 63900.0, '2016-03-16 17:46:00.000'};
{'-71.1189', '42.360517', 'ACCIDENT', 63900.0, '2016-03-16 17:46:00.000'};
{'-71.120151', '42.35992', 'ACCIDENT', 63300.0, '2016-03-16 17:36:00.000'};
{'-71.1189', '42.360517', 'ACCIDENT', 63300.0, '2016-03-16 17:36:00.000'};
{'-71.089986', '42.351995', 'ACCIDENT', 63300.0, '2016-03-16 17:36:00.000'};
{'-71.084909', '42.352907', 'ACCIDENT', 63300.0, '2016-03-16 17:36:00.000'};
{'-71.082628', '42.353414', 'ACCIDENT', 63300.0, '2016-03-16 17:36:00.000'};
{'-71.103575', '42.348282', 'ACCIDENT', 63300.0, '2016-03-16 17:36:00.000'};
{'-71.066139', '42.371245', 'ACCIDENT', 63300.0, '2016-03-16 17:36:00.000'};
{'-71.084909', '42.352907', 'ACCIDENT', 63900.0, '2016-03-16 17:46:00.000'};
{'-71.066139', '42.371245', 'ACCIDENT', 63900.0, '2016-03-16 17:46:00.000'};
{'-71.120151', '42.35992', 'ACCIDENT', 64500.0, '2016-03-16 17:56:00.000'};
{'-71.1189', '42.360517', 'ACCIDENT', 64500.0, '2016-03-16 17:56:00.000'};
{'-71.089986', '42.351995', 'ACCIDENT', 64500.0, '2016-03-16 17:56:00.000'};
{'-71.084909', '42.352907', 'ACCIDENT', 64500.0, '2016-03-16 17:56:00.000'};
{'-71.071264', '42.353038', 'ACCIDENT', 65100.0, '2016-03-16 18:06:00.000'};
{'-71.120151', '42.35992', 'ACCIDENT', 65700.0, '2016-03-16 18:16:00.000'};
{'-71.071264', '42.353038', 'ACCIDENT', 65700.0, '2016-03-16 18:16:00.000'};
{'-71.122472', '42.308384', 'ACCIDENT', 66900.0, '2016-03-16 18:36:00.000'};
{'-71.073345', '42.356349', 'ACCIDENT', 67500.0, '2016-03-16 18:46:00.000'};
{'-71.122472', '42.308384', 'ACCIDENT', 67500.0, '2016-03-16 18:46:00.000'};
{'-71.060074', '42.328979', 'ACCIDENT', 67500.0, '2016-03-16 18:46:00.000'};
{'-71.073345', '42.356349', 'ACCIDENT', 68100.0, '2016-03-16 18:56:00.000'};
{'-71.122472', '42.308384', 'ACCIDENT', 68100.0, '2016-03-16 18:56:00.000'};
{'-71.073284', '42.356493', 'ACCIDENT', 68100.0, '2016-03-16 18:56:00.000'};
{'-71.060074', '42.328979', 'ACCIDENT', 68100.0, '2016-03-16 18:56:00.000'};
{'-71.128121', '42.359786', 'ACCIDENT', 68700.0, '2016-03-16 19:06:00.000'};
{'-71.073284', '42.356493', 'ACCIDENT', 68700.0, '2016-03-16 19:06:00.000'};
{'-71.060074', '42.328979', 'ACCIDENT', 68700.0, '2016-03-16 19:06:00.000'};
{'-71.073284', '42.356493', 'ACCIDENT', 69300.0, '2016-03-16 19:16:00.000'};
{'-71.060074', '42.328979', 'ACCIDENT', 69300.0, '2016-03-16 19:16:00.000'};
{'-71.128121', '42.359786', 'ACCIDENT', 69900.0, '2016-03-16 19:26:00.000'};
{'-71.128121', '42.359786', 'ACCIDENT', 71100.0, '2016-03-16 19:46:00.000'};
{'-71.101048', '42.347831', 'ACCIDENT', 74100.0, '2016-03-16 20:36:00.000'};
{'-71.101048', '42.347831', 'ACCIDENT', 74700.0, '2016-03-16 20:46:00.000'};
{'-71.066862', '42.371231', 'ACCIDENT', 71700.0, '2016-03-16 19:56:00.000'};
{'-71.066862', '42.371231', 'ACCIDENT', 72300.0, '2016-03-16 20:06:00.000'};
{'-71.066466', '42.370896', 'ACCIDENT', 72300.0, '2016-03-16 20:06:00.000'};
{'-71.128121', '42.359786', 'ACCIDENT', 72300.0, '2016-03-16 20:06:00.000'};
{'-71.066862', '42.371231', 'ACCIDENT', 72900.0, '2016-03-16 20:16:00.000'};
{'-71.128121', '42.359786', 'ACCIDENT', 72900.0, '2016-03-16 20:16:00.000'};
{'-71.152137', '42.360011', 'ACCIDENT', 72900.0, '2016-03-16 20:16:00.000'};
{'-71.128121', '42.359786', 'ACCIDENT', 73500.0, '2016-03-16 20:26:00.000'};
{'-71.152137', '42.360011', 'ACCIDENT', 73500.0, '2016-03-16 20:26:00.000'};
{'-71.152908', '42.359713', 'ACCIDENT', 74100.0, '2016-03-16 20:36:00.000'};
{'-71.152137', '42.360011', 'ACCIDENT', 74100.0, '2016-03-16 20:36:00.000'};
{'-71.157006', '42.359007', 'ACCIDENT', 74100.0, '2016-03-16 20:36:00.000'};
{'-71.118774', '42.360693', 'ACCIDENT', 74100.0, '2016-03-16 20:36:00.000'};
{'-71.118948', '42.36066', 'ACCIDENT', 74100.0, '2016-03-16 20:36:00.000'};
{'-71.065543', '42.361195', 'ACCIDENT', 74100.0, '2016-03-16 20:36:00.000'};
{'-71.065457', '42.36644', 'ACCIDENT', 74700.0, '2016-03-16 20:46:00.000'};
{'-71.152908', '42.359713', 'ACCIDENT', 74700.0, '2016-03-16 20:46:00.000'};
{'-71.157006', '42.359007', 'ACCIDENT', 74700.0, '2016-03-16 20:46:00.000'};
{'-71.118774', '42.360693', 'ACCIDENT', 74700.0, '2016-03-16 20:46:00.000'};
{'-71.118948', '42.36066', 'ACCIDENT', 74700.0, '2016-03-16 20:46:00.000'};
{'-71.065543', '42.361195', 'ACCIDENT', 74700.0, '2016-03-16 20:46:00.000'};
{'-71.065457', '42.36644', 'ACCIDENT', 75300.0, '2016-03-16 20:56:00.000'};
{'-71.152908', '42.359713', 'ACCIDENT', 75300.0, '2016-03-16 20:56:00.000'};
{'-71.157006', '42.359007', 'ACCIDENT', 75300.0, '2016-03-16 20:56:00.000'};
{'-71.118774', '42.360693', 'ACCIDENT', 75300.0, '2016-03-16 20:56:00.000'};
{'-71.065543', '42.361195', 'ACCIDENT', 75300.0, '2016-03-16 20:56:00.000'};
{'-71.101048', '42.347831', 'ACCIDENT', 75300.0, '2016-03-16 20:56:00.000'};
{'-71.065457', '42.36644', 'ACCIDENT', 75900.0, '2016-03-16 21:06:00.000'};
{'-71.064666', '42.366313', 'ACCIDENT', 75900.0, '2016-03-16 21:06:00.000'};
{'-71.065838', '42.366419', 'ACCIDENT', 75900.0, '2016-03-16 21:06:00.000'};
{'-71.12131', '42.360056', 'ACCIDENT', 75900.0, '2016-03-16 21:06:00.000'};
{'-71.065838', '42.366419', 'ACCIDENT', 77100.0, '2016-03-16 21:26:00.000'};
{'-71.065457', '42.36644', 'ACCIDENT', 76500.0, '2016-03-16 21:16:00.000'};
{'-71.064666', '42.366313', 'ACCIDENT', 76500.0, '2016-03-16 21:16:00.000'};
{'-71.065838', '42.366419', 'ACCIDENT', 76500.0, '2016-03-16 21:16:00.000'};
{'-71.093534', '42.363211', 'ACCIDENT', 76500.0, '2016-03-16 21:16:00.000'};
{'-71.12131', '42.360056', 'ACCIDENT', 76500.0, '2016-03-16 21:16:00.000'};
{'-71.093534', '42.363211', 'ACCIDENT', 77100.0, '2016-03-16 21:26:00.000'};
{'-71.093534', '42.363211', 'ACCIDENT', 77700.0, '2016-03-16 21:36:00.000'};
{'-71.1102', '42.354112', 'ACCIDENT', 79500.0, '2016-03-16 22:06:00.000'};
{'-71.1102', '42.354112', 'ACCIDENT', 80100.0, '2016-03-16 22:16:00.000'};
{'-71.102323', '42.374965', 'ACCIDENT', 80100.0, '2016-03-16 22:16:00.000'};
{'-71.1102', '42.354112', 'ACCIDENT', 80700.0, '2016-03-16 22:26:00.000'};
{'-71.102323', '42.374965', 'ACCIDENT', 80700.0, '2016-03-16 22:26:00.000'};
{'-71.06004', '42.348865', 'ACCIDENT', 83100.0, '2016-03-16 23:06:00.000'};
{'-71.072536', '42.358247', 'ACCIDENT', 84300.0, '2016-03-16 23:26:00.000'};
{'-71.07221', '42.359419', 'ACCIDENT', 84300.0, '2016-03-16 23:26:00.000'};
{'-71.102323', '42.374965', 'ACCIDENT', 81300.0, '2016-03-16 22:36:00.000'};
{'-71.088919', '42.351771', 'ACCIDENT', 81900.0, '2016-03-16 22:46:00.000'};
{'-71.102323', '42.374965', 'ACCIDENT', 81900.0, '2016-03-16 22:46:00.000'};
{'-71.072058', '42.359805', 'ACCIDENT', 82500.0, '2016-03-16 22:56:00.000'};
{'-71.088919', '42.351771', 'ACCIDENT', 82500.0, '2016-03-16 22:56:00.000'};
{'-71.06004', '42.348865', 'ACCIDENT', 82500.0, '2016-03-16 22:56:00.000'};
{'-71.072058', '42.359805', 'ACCIDENT', 83100.0, '2016-03-16 23:06:00.000'};
{'-71.072536', '42.358247', 'ACCIDENT', 83100.0, '2016-03-16 23:06:00.000'};
{'-71.072058', '42.359805', 'ACCIDENT', 83700.0, '2016-03-16 23:16:00.000'};
{'-71.072536', '42.358247', 'ACCIDENT', 83700.0, '2016-03-16 23:16:00.000'};
{'-71.07221', '42.359419', 'ACCIDENT', 83700.0, '2016-03-16 23:16:00.000'};
{'-71.06004', '42.348865', 'ACCIDENT', 83700.0, '2016-03-16 23:16:00.000'};
{'-71.07221', '42.359419', 'ACCIDENT', 84900.0, '2016-03-16 23:36:00.000'};
{'-71.07221', '42.359419', 'ACCIDENT', 85500.0, '2016-03-16 23:46:00.000'}};
%% 5) Compare timestamps and overall distances --> form vector of 1 and 0's for the final decisions.

%Calculates distance between 2 locations -> Distance is in km, x1000 for m.
anon_haversine=@(lat1,long1,lat2,long2)6372.8*(2.*asin(sqrt((sin(((pi/180)*(lat2-lat1))./2)).^2+cos((pi/180)*(lat1)).*cos((pi/180)*(lat2)).*(sin(((pi/180)*(long2-long1))./2)).^2)));  

% Use for table displays at the end
distances_min = zeros(length(refinedIndices),1);
timediffs     = zeros(length(refinedIndices),1);

for i = 1:length(refinedIndices)
    % Index we currently look at
    testIndex = refinedIndices(i);

    % Using the index, retrieve its information
    a = testIndices == testIndex;
    
    % Extract data for a specific index
    info = testData{a};
    
    % Extract relevant information
    uuidInfo      = info.uuid;
    timestampInfo = info.startTime;
    
    % Using the uuid, extract points of a jam
    INDEX = 0;
    for ii = 1:length(uuidPoints)
        if (isequal(uuidInfo,uuidPoints{ii}.uuid))
            INDEX = ii;
        end
    end

    % Extract jam points for a certain uuid. 
    points = uuidPoints{INDEX}.pts;
    
    % Make latitude and longitude point vectors for a specific uuid/jam
    LAT  = points(:,:,2);
    LONG = points(:,:,1);
    
    
    % Using timestampInfo, we will get the coordinates of all
    % matching/close accidents.
    timeDifferences = zeros(1,length(accidentInfo));
    for iii = 1:length(accidentInfo)
        timeDifferences(iii) = timestampInfo - accidentInfo{iii}{4};
    end
    
    % Find elements whose differences are 0.
    set1 = find(timeDifferences == 0);
    
    % If the time stamp does not match any of the accident times, find the
    % closest accident times.
 
    % Get indices of closest neighbors
    if (isempty(set1))
        TD = abs(timeDifferences);
        
        [OUT,IND]=sort(TD);
        
        set1 = IND(1:num_closeneighbors);
        %disp('hi')
    end
    
    % Column1 -> lat, column2 -> long
    accidentPoints = zeros(length(set1),2);
    for iiii = 1:length(set1)
        ind_val = set1(iiii);
        
        % Using the index, we must extract the accident locations from the
        % accidentInfo cell array.
        accidentPoints(iiii,1) = str2num(accidentInfo{ind_val}{2}); 
        accidentPoints(iiii,2) = str2num(accidentInfo{ind_val}{1});
    end
    
    % Now we must compute distances. 
    distanceMat = zeros(length(LAT),length(set1));
    for j = 1:length(LAT)
        long_jam = LONG(j);
        lat_jam  = LAT(j);
        for k = 1:length(set1)
            long_accident = accidentPoints(k,2);
            lat_accident  = accidentPoints(k,1);
            distanceMat(j,k) = anon_haversine(lat_accident,long_accident,lat_jam,long_jam);
        end
    end
    
    % get minimum distance
    distances_min(i) = min(min(distanceMat));
    
    % Get time difference
    timediffs(i) = timeDifferences(set1(1));
end

%% Display Output -> Column layout:  indices, minimum distances, time differences
format long g
finalmatrix = [refinedIndices,distances_min*1000,timediffs]
    
%% Obtain percentages of correctly found accidents from indices list.
counter_correct = 0;
 
validIndices = [];
for w = 1:length(timediffs)
    if ((finalmatrix(w,2)<dist_threshold) && (abs(finalmatrix(w,3))<time_threshold))
       validIndices = [validIndices finalmatrix(w,1)];
       counter_correct = counter_correct+1; 
    end
end

percent_correct = counter_correct/length(timediffs);
percent_incorrect = 1-percent_correct;

TPR = percent_correct*100;
end
    
    
    
    
    
    
    
    
    
    
    
    
    
   


